#!/usr/bin/env bash

set -o errexit      # Exit on most errors (see the manual)
set -o nounset      # Disallow expansion of unset variables
set -o pipefail     # Use last non-zero exit code in a pipeline


SCOPE="${1:-auto}"
echo "Using scope $SCOPE"

# We get the next version, without tagging
echo "Getting next version"
nextversion="$(source semtag final -fos "$SCOPE")"
echo "Publishing with version: $nextversion"

# We replace the placeholder in the source with the new version
replace="s/^PROG_VERSION=\"[^\"]*\"/PROG_VERSION=\"$nextversion\"/g"
sed -i.bak "$replace" semtag

# We replace the version in the README file with the new version
replace="s/^\[Version: [^[]*]/[Version: $nextversion]/g"
sed -i.bak "$replace" README.md

# We remove the backup README.md generated by the sed command
rm semtag.bak
rm README.md.bak

# We add both changed files
git add semtag README.md

git commit -m "Update readme and info to $nextversion"
git push

# We update the tag with the new version
source semtag final -f -v "$nextversion"
